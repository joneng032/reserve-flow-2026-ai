name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      version:
        description: 'Version to deploy'
        required: false
        type: string
      skip_tests:
        description: 'Skip running tests before deployment'
        required: false
        type: boolean
        default: false

env:
  NODE_VERSION: "18"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version || github.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run type checking
        if: inputs.skip_tests == false
        run: npm run type-check

      - name: Run linting
        if: inputs.skip_tests == false
        run: npm run lint

      - name: Run unit tests
        if: inputs.skip_tests == false
        run: npm run test:unit

      - name: Build application
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_ENVIRONMENT: ${{ inputs.environment }}

      - name: Run build tests
        if: inputs.skip_tests == false
        run: npm run test:build

      - name: Deploy to Vercel (Staging)
        if: inputs.environment == 'staging'
        run: |
          echo "Deploying to Vercel staging..."
          npx vercel --prod=false --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Deploy to Vercel (Production)
        if: inputs.environment == 'production'
        run: |
          echo "Deploying to Vercel production..."
          npx vercel --prod=true --yes
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Run smoke tests
        if: inputs.skip_tests == false
        run: npm run test:smoke
        env:
          TEST_ENVIRONMENT: ${{ inputs.environment }}
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Create deployment notification
        if: success()
        run: |
          echo "Deployment completed successfully!"
          echo "Environment: ${{ inputs.environment }}"
          echo "Version: ${{ inputs.version || github.sha }}"
          echo "Build completed at: $(date)"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Deployment failed!"
          echo "Environment: ${{ inputs.environment }}"
          echo "Version: ${{ inputs.version || github.sha }}"
          echo "Check the logs above for details"