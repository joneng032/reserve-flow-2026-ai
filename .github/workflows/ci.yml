name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        dotnet: ['8.0.x']
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.dotnet/tools
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Cache dotnet workload manifests
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/workloads
            ~/.dotnet/workloads
          key: ${{ runner.os }}-workloads-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-workloads-

      - name: Install MAUI workloads (platform-specific)
        shell: pwsh
        run: |
          if ($IsWindows) {
            dotnet workload install maui --skip-manifest-update || true
          } elseif ($IsMacOS) {
            # On macOS we need iOS & macCatalyst workloads for simulator/iOS builds
            dotnet workload install maui ios maui-maccatalyst --skip-manifest-update || true
          } else {
            # Linux (ubuntu) - install only workloads required for build/tests
            dotnet workload install maui --skip-manifest-update || true
          }

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run unit tests
        run: |
          if (Test-Path '**/*Tests/*.csproj') {
            dotnet test --no-build --verbosity normal
          } else {
            Write-Host 'No test projects found; skipping unit tests.'
          }

      - name: Publish artifacts (Release)
        run: |
          dotnet publish -c Release -o ./artifacts || true
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.os }}
          path: ./artifacts

      - name: Signing placeholders
        env:
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        run: |
          echo "Signing steps placeholder -- configure secrets and signing commands."
name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build
